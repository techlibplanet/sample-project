name : Spring boot CI

on:
  push:
    branches: '**'

jobs:
  #Test's job
#  build:
#    name: Build app
#    #Run on Ubuntu using the latest version
#    runs-on: ubuntu-latest
#    #Job's steps
#    steps:
#      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
#      - uses: actions/checkout@v2
#      #Set up JDK 11
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11'
#      #      #Set up Maven cache
#      #      - name: Cache Maven packages
#      #        #This action allows caching dependencies and build outputs to improve workflow execution time.
#      #        uses: actions/cache@v1
#      #        with:
#      #          path: ~/.m2
#      #          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#      #          restore-keys: ${{ runner.os }}-m2
#      - name: Run Build
#        run: gradle build


  push_image:
#    needs: build
    name: Deploy Image to AWS ECR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sample-project-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
